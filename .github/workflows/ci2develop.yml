name: Change Detection

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  detect-changes-by-component:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      scheduler: ${{ steps.filter.outputs.scheduler }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          backend:
            - 'backend/**'
          scheduler:
            - 'scheduler/**'
          frontend:
            - 'frontend/**'

  versioning:
    needs: detect-changes-by-component
    if: ${{ needs.detect-changes-by-component.outputs.backend == 'true' }}
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump_version.outputs.new_version }}
    steps:
    - name: Get latest version from Harbor
      id: get_version
      run: |
        HARBOR_PROJECT="your-project"
        HARBOR_REPO="backend"
        ARTIFACTS=$(curl -s -u "${{ secrets.HARBOR_USERNAME }}:${{ secrets.HARBOR_PASSWORD }}" \
          "https://${{ secrets.HARBOR_REGISTRY }}/api/v2.0/projects/${HARBOR_PROJECT}/repositories/${HARBOR_REPO}/artifacts?page=1&page_size=1" \
          | jq -r '.[0].tags[0].name')
        LATEST_VERSION=$(echo $ARTIFACTS | grep -oP '(?<=v)\d+\.\d+\.\d+' | sort -V | tail -n1)
        echo "::set-output name=latest_version::${LATEST_VERSION:-1.0.0}"

  ci-backend:
      needs: [versioning, detect-changes-by-component]
      if: ${{ needs.detect-changes-by-component.outputs.backend == 'true' }}
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Harbor
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.HARBOR_REGISTRY }}/code-place-dev/backend:${{ needs.versioning.outputs.new_tag }}

      - name: Backend changes detected and built
        run: echo "backend 변경 감지 및 빌드 완료"

  ci-scheduler:
    needs: detect-changes-by-component
    if: ${{ needs.detect-changes-by-component.outputs.scheduler == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Harbor
      uses: docker/login-action@v1
      with:
        registry: ${{ secrets.HARBOR_REGISTRY }}
        username: ${{ secrets.HARBOR_USERNAME }}
        password: ${{ secrets.HARBOR_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./scheduler
        file: ./scheduler/Dockerfile
        push: true
        tags: ${{ secrets.HARBOR_REGISTRY }}/code-place-dev/backend:${{ github.sha }}

    - name: Backend changes detected and built
      run: echo "scheduler 변경 감지 및 빌드 완료"

  ci-frontend:
      needs: detect-changes-by-component
      if: ${{ needs.detect-changes-by-component.outputs.frontend == 'true' }}
      runs-on: ubuntu-latest
      steps:
      - name: Frontend changes detected
        run: echo "frontend 변경 감지됨"